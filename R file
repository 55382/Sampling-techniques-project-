---
title: "femmesalairebe"
author: "projet"
date: "12/30/2022"
output:
  word_document: default
  html_document:
    df_print: paged
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown




```{r}
library(lpSolve)
library(MASS)
library(sampling)
#importation de données
library("readxl")
BS<-read_excel("C://Users//hanab//Downloads//sondagebienetrebd.xlsx")
head(BS)
tab<- data.frame(BS)
head(tab)
#tab <- subset(df, select=c(Age,Region,Mariee,Enfants,Salaire))

```


```


```{r}
Y<-tab$Pourcentage
 # notre variable d'intérêt est le pourcentade du salaire des femmes dédiées a leurs Bien etre
mean(Y)
```
```{r}
ybarPESR=NULL
varPESR=NULL
n=20
N=100
for (i in 1:20){
t=srswor(20,100) # il s'agit d'un échantillonnage a probabilités égales sans remises
echPESR=as.vector(Y[t==1])
ybarPESR[i]=mean(echPESR)
s2y=sum((echPESR-ybarPESR[i])^2)/(n-1)
varPESR[i]=(1-n/N)*s2y*1/n}
icPESRmin=c(-1.96*sqrt(varPESR)+ybarPESR) #borne inférieure de l'intervalle de confiance
icPESRmax=c(1.96*sqrt(varPESR)+ybarPESR) #borne supérieure del'intervalle de confiance
longIC=icPESRmax-icPESRmin
longIC
PESR=data.frame(ybarPESR,varPESR,icPESRmin,icPESRmax,longIC)
PESR
library(lattice)
x=1:20
xyplot(PESR$icPESRmin+PESR$icPESRmax+ybarPESR~x,col=c("red","blue","green"),type= "o",main="Sondage aléatoire simple sansremise",xlab="Les echantillons",ylab="Intervalles_de_confiance  ybarpesr ") 
#traçage du graphique
mean(PESR$ybarPESR)
```
```{r}
#SAS PEAR
ybarPEAR=NULL
varPEAR=NULL

for (i in 1:20)
{t=srswr(20,100) # il s'agit d'un échantillonnage a probabilités égales avec remise
echPEAR=Y[t!=0] #tirage de l'échantillon
m=length(echPEAR) #taille de l'échantillon tiré
ybarPEAR[i]=mean(echPEAR)
s2y=sum((echPEAR-ybarPEAR[i])^2)/m-1
varPEAR[i]=s2y/m}
icPEARmin=c(-1.96*sqrt(varPEAR)+ybarPEAR) #borne inférieure del'intervalle de confiance
icPEARmax=c(1.96*sqrt(varPEAR)+ybarPEAR) #borne supérieure del'intervalle de confiance
longIC=icPESRmax-icPESRmin
longIC
PEAR=data.frame(ybarPEAR,varPEAR,icPEARmin,icPEARmax,longIC)
PEAR
library(lattice)
x=1:20
xyplot(PEAR$icPEARmin+PEAR$icPEARmax+ybarPEAR~x,col=c("red","blue","green"),type= "o",main="Sondage aléatoire simple avec remise",xlab="Les echantillons",ylab="INTERVALLES DE CONFIANCES")
mean(PEAR$ybarPEAR)
```
# Sondage à probabilité inégales
```{r}
#Avec remise(PIAR)
var_aux<-(1/tab$moyensalaire)
x<-var_aux
# Nous avons choisi le moyen salaire  comme variable auxiliaire
########PIAR#########
echant=matrix(0,nrow=20,ncol=20) 
# l'échantillon tiré
y=vector("length"=20,"numeric")
# la moyenne estimée
var=vector("length"=20,"numeric") 
# la variance estimée de la moyenne 
IC=matrix(0,nrow=20,ncol=2) 
# intervalle de confiance
longueur=matrix(0,nrow=20,ncol=1) 
# longueur de l'intervalle de confiance
s=sum(x)
 p=1:100 # pondération selon la variable auxiliaire
 for (i in 1 :100) p[i]=x[i]/s
 v<-1:101 # la somme des pondérations jusqu'à i
 v[1]=0
 for (i in 2 :101) v[i] = sum( p [1:i-1])
 echantp=matrix(0,nrow=20,ncol=20) 
 # l'échantillon pondéré
for (i in 1:20) {
 for (j in 1:20) {
 u = runif(1,0,1)
for (k in 1:100) {
 if((v[1:100][k]<=u)& (u<v[2:101][k]))
 {echantp[j,i]<-Y[k]/p[k]
 echant[j,i]<-Y[k]
 }
}
 }
y[i]=(1/(n*N))*sum(echantp[,i])
var[i]=(1/(n*(n-1)*N*N)) *(sum((echantp[,i]-(100*y[i]))^2))}
for(i in 1:20){
 IC[i,]=c(y[i]-1.96*sqrt(var[i]/20),y[i]+1.96*sqrt(var[i]/20))
 longueur[i]=IC[i,2]-IC[i,1]
 }
IC
e=c(1:20)

plot(e,IC[,1],ylim=c(min(min(IC[,2]),min(IC[,1])),max(max(IC[,2]),max(IC[,1]))),type="o",xaxt = "n",xlab="Echantillons ei",
ylab="Intervalle deconfiance",main=list("IC associés aux ei",cex=1.5,font=3),col=2)
 par(new=TRUE)

plot(e,IC[,2],ylim=c(min(min(IC[,2]),min(IC[,1])),max(max(IC[,2]),max(IC[,1
]))),type="o",xaxt = "n",xlab="Echantillons ei",ylab="",main=list("IC associés aux ei",cex=1.5,font=3))
 axis(1,at=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))
Y_piar =y
mean(Y_piar)

dfpiar=data.frame(Y_piar,var,IC[i,1],IC[i,2],longueur[i])
dfpiar

############PISR##################







###########PISR###############

ybarPISR=NULL
varPISR=NULL
icPISRmin=NULL
icPISRmax=NULL
for(i in 1:20){pi=inclusionprobabilities(x,20)
sp=UPpoisson(pi) # Nous avons utilisé la méthode de poisson pour l'échantillonnage
ech=getdata(y,sp)
pk=getdata(pi,sp)
tybarPISR=sum(ech[,2]/pk)
ybarPISR[i]=1/100*tybarPISR
varPISR[i]=1/10000*sum((1-pk[,2]) *(ech[,2]/pk[,2])^2)
icPISRmin[i]=-1.96*varPISR[i]+ybarPISR[i]
#borne inff del'intervalle de confiance
icPISRmax[i]=1.96*sqrt(varPISR[i])+ybarPISR[i]}
lgIC=icPISRmax-icPISRmin #amplitude de l intervalle de confiance
PISR=data.frame(ybarPISR,varPISR,icPISRmin,icPISRmax,lgIC)
s=1:20
h=PISR$ybarPISR
h1=PISR$icPISRmin
h2=PISR$icPISRmax
library(lattice)
xyplot(h1+h2+h ~ s,col=c("blue","red","green"),main="Sondage à probasinégales avec remise",ylab="Intervalles de confiance_y bar",type='o') 
#traçage du graphique
mean(PISR$ybarPISR)
varPISR
PISR





##############Stratf ################


age=tab$Age
age
Nhs=data.frame(table(age))[,2]
M=length(Nhs)


N=sum(Nhs)
echants1=matrix(0,nrow=4,ncol=20)
yh_s1=vector("length"=20,"numeric")#strate1
vh_s1=vector("length"=20,"numeric")#strate1
#Determination de l'echatillon dans la strate 1(h)
for (i in 1:20){echants1[,i]=sample(Nhs[1],4,replace=FALSE) }
for (i in 1:20){ yh_s1[i]=mean(Y[echants1[,i]]) }
sh=vector("length"=20,"numeric")
for(i in 1:20){sh[i]=(1/3)*sum((echants1[,i]-yh_s1[i])^2)}
varianceh=vector("length"=20,"numeric")
varianceh=((1/4)*(1-(4/Nhs[1]))) * sh
varianceh
mean(yh_s1)
#Determination de l'echatillon dans la strate 2(f)
echants2=matrix(0,nrow=6,ncol=20)
yh_s2=vector("length"=20,"numeric")
v_s2=vector("length"=20,"numeric")
for (i in 1:20){echants2[,i]=sample(Nhs[2],6,replace=FALSE) }
for (i in 1:20){yh_s2[i]=mean(Y[echants2[,i]])}
sf=vector("length"=20,"numeric")
for(i in 1:20){sf[i]=(1/5)*sum((echants2[,i]-yh_s2[i])^2)}
variancef=vector("length"=20,"numeric")
variancef=((1/5)*(1-(5/Nhs[2])))*sf
variancef
mean(yh_s2)
#Determination de l'echatillon dans la strate 3(e)
echants3=matrix(0,nrow=5,ncol=20)
yh_s3=vector("length"=20,"numeric")
v_s3=vector("length"=20,"numeric")
for (i in 1:20){echants3[,i]=sample(Nhs[3],5,replace=FALSE) }
for (i in 1:20){yh_s3[i]=mean(Y[echants3[,i]])}
se=vector("length"=20,"numeric")
for(i in 1:20){se[i]=(1/4)*sum((echants3[,i]-yh_s3[i])^2)}
variancee=vector("length"=20,"numeric")
variancee=((1/5)*(1-(5/Nhs[3])))*sf
variancee
#Determination de l'echatillon dans la strate 4(g)
echants4=matrix(0,nrow=5,ncol=20)
yh_s4=vector("length"=20,"numeric")
v_s4=vector("length"=20,"numeric")
for (i in 1:20){echants4[,i]=sample(Nhs[4],5,replace=FALSE) }
for (i in 1:20){yh_s4[i]=mean(Y[echants4[,i]])}
sg=vector("length"=20,"numeric")
for(i in 1:20){sg[i]=(1/4)*sum((echants4[,i]-yh_s4[i])^2)}
varianceg=vector("length"=20,"numeric")
varianceg=((1/5)*(1-(5/Nhs[3])))*sg
varianceg


#la variance startifiée et la moyenne stratifiée
ystrat=vector("length"=20,"numeric")
variancestrat=vector("length"=20,"numeric")
for(i in 1:20){
ystrat[i]=(Nhs[1]*yh_s1[i]+(Nhs[2])*yh_s2[i]+Nhs[3]*yh_s3[i]+Nhs[4]*yh_s4[i])/100
variancestrat[i]=(1/100)^2*((Nhs[1])^2*varianceh[i]+(Nhs[2])^2*variancef[i]+((Nhs[3]))^2*variancee[i]+
(Nhs[4])^2*varianceg[i])}
ystrat
library(lattice)
 s=1:20
 icmin=c(-1.96*sqrt(variancestrat)+ystrat)
 icPEARmax=c(1.96*sqrt(variancestrat)+ystrat)
 STRAT=data.frame(ystrat,variancestrat,icmin,icPEARmax)
xyplot(STRAT$icmin+STRAT$icPEARmax+ystrat ~ s,col=c("red","blue","green"),type="o",main="SONDAGE STARTIFIE_meme taille",xlab="",ylab="IC ,ystrat")
STRAT
mean(ystrat)
# Sondage Stratifié avec allocation proportionnelle
f=20/100
nh=round(f*Nhs[1])
nf=round(f*Nhs[2])
ne=round(f*Nhs[3])
ng=round(f*Nhs[4])
echants1=matrix(0,nrow=nh,ncol=20)
for (i in 1:20){ echants1[,i]=Y[sample(Nhs[1],nh,replace=FALSE)]}
echants2=matrix(0,nrow=nf,ncol=20)
for (i in 1:20){echants2[,i]=Y[sample(Nhs[2],nf,replace=FALSE)]}
echants3=matrix(0,nrow=ne,ncol=20)
for (i in 1:20){echants3[,i]=Y[sample(Nhs[3],ne,replace=FALSE)]}
echants4=matrix(0,nrow=ng,ncol=20)
for (i in 1:20){echants4[,i]=Y[sample(Nhs[4],ng,replace=FALSE)]}
echant=rbind(echants1,echants2,echants3,echants4)
#dim(echant)=c(nf+nh+ne+ng,20)
yprop=vector("length"=20,"numeric")
for (i in 1:20){ yprop[i]=mean(echant[,i])}
ypropmoy=mean(yprop)

ypropmoy
s=vector("length"=20,"numeric")
#for(i in 1:20)
#{ sh[i]=1/9*sum((echanth[,i]-vi[i])^2)}
for(i in 1:20){sh[i]=1/( 19)*sum((Y[echants1[,i]]-yprop[i])^2)}
for(i in 1:20){ sf[i]=1/(19)*sum((Y[echants2[,i]]-yprop[i])^2)}
for(i in 1:20){ se[i]=1/(19)*sum((Y[echants3[,i]]-yprop[i])^2)}
for(i in 1:20){ sg[i]=1/(19)*sum((Y[echants4[,i]]-yprop[i])^2)}

var=vector("length"=20,"numeric")

for(i in 1:20){ var[i]=(1/100)*(Nhs[1]*sh[i]+Nhs[2]*sf[i]+Nhs[3]*se[i]+Nhs[4]*sg[i])}
variance=(1/20)*(1-f)*var
icmin=c(-1.96*sqrt(variance)+yprop)
icmax=c(1.96*sqrt(variance)+yprop)
longIC=icmax-icmin
STPROP=data.frame(yprop,variance,icmin,icmax,longIC)
STPROP
s=1:20
xyplot(STPROP$icmin+STPROP$icmax+yprop~s,col=c("red","blue","green")
,type= "o",main="SONDAGE STart a allocation prop",xlab="",ylab="IC et yprop")

#Sondage à allocation optimale
#Calcul des sigma h puis des nh puis les variances
for(i in 1:20){sh[i]=1/(99)*sum((echants1[,i]-yprop[i])^2)}
for(i in 1:20){ sf[i]=1/(19)*sum((echants2[,i]-yprop[i])^2)}
for(i in 1:20){ se[i]=1/(19)*sum((echants3[,i]-yprop[i])^2)}
for(i in 1:20){ sg[i]=1/(19)*sum((echants4[,i]-yprop[i])^2)}



#Sondage à 1er degré
Ni=table(tab$Age) # taille de chaque grappe
ybar_chap=NULL
var_estim_ybar_Grappe=NULL
icSgmin=NULL
icSgmax=NULL
for(l in 1:10)    {
Sg=cluster(tab,clustername=c("Age"),size=2,method="srswor")
pik=Sg$Prob
Ech_Sg=getdata(tab,Sg)
n=dim(Sg)[1]
y_ech=Ech_Sg$Pourcentage
gr=unique(Sg$Age)
ty=NULL
  for (i in 1:2){
        ty[i]=sum(y_ech[Ech_Sg$Age==gr[i]])}

pi=unique(pik)
t_chap_y_Grappe=sum(ty/pi)
t_chap_y_Grappe
Ni_ech=as.vector(Ni[gr])
N=sum(Ni)
ybar_chap[l]=(t_chap_y_Grappe/(N))
M=4
m=2
differance_carré=NULL



for (i in 1:2)
{
differance_carré[i]=(ty[i]-(t_chap_y_Grappe/Ni_ech[i]))^2}

var_estim_ybar_Grappe[l]=(1/10000)*((M-m)*M/((M-1)*m))*sum(differance_carré)}
icSgmin=-1.96*var_estim_ybar_Grappe+ybar_chap
icSgmax=+1.96*var_estim_ybar_Grappe+ybar_chap
delta=icSgmax-icSgmin
SG10=data.frame(ybar_chap,var_estim_ybar_Grappe,icSgmin,icSgmax,delta)
SG10
s=1:10
h=SG10$ybar_chap
h1=SG10$icSgmin
h2=SG10$icSgmax
library(lattice)
xyplot(h2+h1+h ~ s,col=c("blue","red","green"),main="Sondage par grappes de premier degré",ylab="",xlab="",type='o')













```
